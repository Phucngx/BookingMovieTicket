import React, { useState } from 'react'
import { Card, Form, Input, Button, Switch, Select, Typography, Row, Col, message, Divider } from 'antd'
import { SaveOutlined, ReloadOutlined } from '@ant-design/icons'

const { Title, Text } = Typography
const { Option } = Select
const { TextArea } = Input

const Settings = () => {
  console.log('Settings component is rendering')
  const [form] = Form.useForm()
  const [loading, setLoading] = useState(false)

  const handleSave = async (values) => {
    setLoading(true)
    try {
      // TODO: Implement save settings API
      console.log('Save settings:', values)
      await new Promise(resolve => setTimeout(resolve, 1000)) // Simulate API call
      message.success('C√†i ƒë·∫∑t ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!')
    } catch (error) {
      message.error('C√≥ l·ªói x·∫£y ra khi l∆∞u c√†i ƒë·∫∑t')
    } finally {
      setLoading(false)
    }
  }

  const handleReset = () => {
    form.resetFields()
    message.info('ƒê√£ reset v·ªÅ c√†i ƒë·∫∑t m·∫∑c ƒë·ªãnh')
  }

  // Test if component renders
  if (!form) {
    console.error('Form is not initialized')
    return <div>Error: Form not initialized</div>
  }

  return (
    <div>
      <div style={{ padding: '16px', backgroundColor: '#e6f7ff', border: '2px solid #1890ff', borderRadius: '4px', marginBottom: '16px' }}>
        <Text strong style={{ color: '#1890ff' }}>üéØ Settings Component is RENDERING!</Text>
        <br />
        <Text>This proves Settings component is working</Text>
      </div>
      <Title level={2}>C√†i ƒë·∫∑t h·ªá th·ªëng</Title>
      
      <Form
        form={form}
        layout="vertical"
        onFinish={handleSave}
        initialValues={{
          siteName: 'Booking Movie Ticket',
          siteDescription: 'H·ªá th·ªëng ƒë·∫∑t v√© xem phim tr·ª±c tuy·∫øn',
          emailNotifications: true,
          smsNotifications: false,
          maintenanceMode: false,
          maxFileSize: '10',
          allowedFileTypes: ['jpg', 'png', 'gif'],
          defaultLanguage: 'vi',
          timezone: 'Asia/Ho_Chi_Minh'
        }}
      >
        <Row gutter={[24, 24]}>
          <Col xs={24} lg={12}>
            <Card title="Th√¥ng tin website" style={{ height: '100%' }}>
              <Form.Item
                name="siteName"
                label="T√™n website"
                rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p t√™n website' }]}
              >
                <Input placeholder="Nh·∫≠p t√™n website" />
              </Form.Item>

              <Form.Item
                name="siteDescription"
                label="M√¥ t·∫£ website"
                rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p m√¥ t·∫£ website' }]}
              >
                <TextArea 
                  placeholder="Nh·∫≠p m√¥ t·∫£ website" 
                  rows={3}
                />
              </Form.Item>

              <Form.Item
                name="defaultLanguage"
                label="Ng√¥n ng·ªØ m·∫∑c ƒë·ªãnh"
              >
                <Select placeholder="Ch·ªçn ng√¥n ng·ªØ">
                  <Option value="vi">Ti·∫øng Vi·ªát</Option>
                  <Option value="en">English</Option>
                </Select>
              </Form.Item>

              <Form.Item
                name="timezone"
                label="M√∫i gi·ªù"
              >
                <Select placeholder="Ch·ªçn m√∫i gi·ªù">
                  <Option value="Asia/Ho_Chi_Minh">Asia/Ho_Chi_Minh</Option>
                  <Option value="UTC">UTC</Option>
                </Select>
              </Form.Item>
            </Card>
          </Col>

          <Col xs={24} lg={12}>
            <Card title="C√†i ƒë·∫∑t th√¥ng b√°o" style={{ height: '100%' }}>
              <Form.Item
                name="emailNotifications"
                label="Th√¥ng b√°o qua email"
                valuePropName="checked"
              >
                <Switch />
              </Form.Item>

              <Form.Item
                name="smsNotifications"
                label="Th√¥ng b√°o qua SMS"
                valuePropName="checked"
              >
                <Switch />
              </Form.Item>

              <Form.Item
                name="maintenanceMode"
                label="Ch·∫ø ƒë·ªô b·∫£o tr√¨"
                valuePropName="checked"
              >
                <Switch />
              </Form.Item>

              <Divider />

              <Text type="secondary">
                Khi b·∫≠t ch·∫ø ƒë·ªô b·∫£o tr√¨, website s·∫Ω hi·ªÉn th·ªã th√¥ng b√°o b·∫£o tr√¨ cho ng∆∞·ªùi d√πng
              </Text>
            </Card>
          </Col>
        </Row>

        <Row gutter={[24, 24]} style={{ marginTop: 24 }}>
          <Col xs={24} lg={12}>
            <Card title="C√†i ƒë·∫∑t upload file">
              <Form.Item
                name="maxFileSize"
                label="K√≠ch th∆∞·ªõc file t·ªëi ƒëa (MB)"
                rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p k√≠ch th∆∞·ªõc file t·ªëi ƒëa' }]}
              >
                <Input type="number" placeholder="Nh·∫≠p k√≠ch th∆∞·ªõc file t·ªëi ƒëa" min={1} />
              </Form.Item>

              <Form.Item
                name="allowedFileTypes"
                label="Lo·∫°i file ƒë∆∞·ª£c ph√©p"
              >
                <Select mode="tags" placeholder="Nh·∫≠p lo·∫°i file">
                  <Option value="jpg">JPG</Option>
                  <Option value="png">PNG</Option>
                  <Option value="gif">GIF</Option>
                  <Option value="pdf">PDF</Option>
                </Select>
              </Form.Item>
            </Card>
          </Col>

          <Col xs={24} lg={12}>
            <Card title="C√†i ƒë·∫∑t b·∫£o m·∫≠t">
              <Form.Item
                name="sessionTimeout"
                label="Th·ªùi gian h·∫øt h·∫°n phi√™n (ph√∫t)"
                rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p th·ªùi gian h·∫øt h·∫°n phi√™n' }]}
              >
                <Input type="number" placeholder="Nh·∫≠p th·ªùi gian h·∫øt h·∫°n phi√™n" min={5} />
              </Form.Item>

              <Form.Item
                name="maxLoginAttempts"
                label="S·ªë l·∫ßn ƒëƒÉng nh·∫≠p sai t·ªëi ƒëa"
                rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p s·ªë l·∫ßn ƒëƒÉng nh·∫≠p sai t·ªëi ƒëa' }]}
              >
                <Input type="number" placeholder="Nh·∫≠p s·ªë l·∫ßn ƒëƒÉng nh·∫≠p sai t·ªëi ƒëa" min={3} />
              </Form.Item>

              <Form.Item
                name="enableTwoFactor"
                label="B·∫≠t x√°c th·ª±c 2 b∆∞·ªõc"
                valuePropName="checked"
              >
                <Switch />
              </Form.Item>
            </Card>
          </Col>
        </Row>

        <Card style={{ marginTop: 24 }}>
          <div style={{ textAlign: 'right' }}>
            <Space>
              <Button 
                icon={<ReloadOutlined />}
                onClick={handleReset}
              >
                Reset
              </Button>
              <Button 
                type="primary" 
                htmlType="submit"
                icon={<SaveOutlined />}
                loading={loading}
              >
                L∆∞u c√†i ƒë·∫∑t
              </Button>
            </Space>
          </div>
        </Card>
      </Form>
    </div>
  )
}

export default Settings
